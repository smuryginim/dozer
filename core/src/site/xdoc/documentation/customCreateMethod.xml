<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Custom Create Methods</title>
    <author email="fgarsombke@yahoo.com">Franz Garsombke</author>
  </properties>
  <head>
    <title/>
    <meta http-equiv="CACHE-CONTROL" name="CACHE-CONTROL" content="NO-CACHE"/>
    <meta http-equiv="PRAGMA" name="PRAGMA" content="NO-CACHE"/>
    <meta http-equiv="EXPIRES" content="0"/>
  </head>
  <body>
    <section name="Custom Create Methods">

      <p>
        You can configure Dozer to use custom static create methods to create new instances of destination data
        objects during the mapping process. This can either be set at the field level or class level.
      </p>
      <source>
        <![CDATA[ 
<mapping>
  <class-a create-method="someCreateMethod">
    org.dozer.vo.InsideTestObject
  </class-a>
  <class-b>org.dozer.vo.InsideTestObjectPrime</class-b>

  <field>
    <a>label</a>
    <b>labelPrime</b>
  </field>
</mapping>  
         ]]>
      </source>
      <p>Specifying a custom create method at the Field level....</p>
      <source>
        <![CDATA[ 
<mapping>
  <class-a>org.dozer.vo.TestObject</class-a>
  <class-b>org.dozer.vo.TestObjectPrime</class-b>

  <field>
    <a>createMethodType</a>
    <b create-method="someCreateMethod">createMethodType</b>
  </field>    
</mapping>
         ]]>
      </source>

        <p>
         It is also possible to reference different class with static factory method. This is done by
            providing fully qualified type name and method name separated by dot.
        </p>

      <source>
        <![CDATA[
...
<b create-method="org.dozer.factory.Factory.create">field</b>
...
         ]]>
      </source>

    </section>
  </body>
</document>